# -*- coding: utf-8 -*-
"""Diabetics Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12dxtpm2tjwqnTxGU0pz4gWa3ohhvfaxw
"""

print("Subhendu")

"""# New Section

This is my first programming in Colab
"""

a={'Subhendu'}

print(a)



"""## Import the first **Datasets**"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import sklearn
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

"""Data Collection and Analysis"""

data=pd.read_csv("/diabetes.csv")

data

data.head()

data.shape

data.describe() # getting the statistical measures of the data set

data.info()



data.shape

data['Outcome'].value_counts()

"""0-> Non-**diabetic**

---



---


1-> Diabetic
"""

data.groupby('Outcome').mean()



"""Separate the Data & label"""

X=data.drop(columns='Outcome',axis=1)
Y=data['Outcome']

print(X)

print(Y)

"""Data Standardization"""

scaler=StandardScaler()

scaler.fit(X)

standardized_data = scaler.transform(X) # it is case sensitive so write programme correctly
print("standardized_data")

X=standardized_data
Y=data['Outcome']

print(X)
print(Y)



"""Train _Test train_test_split

**bold text**
"""

X_train, X_test, Y_train, Y_test = train_test_split(X,Y, test_size = 0.2, stratify=Y, random_state=2)

print(X.shape, X_train.shape, X_test.shape)

print(X.shape, X_train.shape, X_test.shape)

"""Training The Model"""

classifier=svm.SVC(kernel='linear')

# training the support vector Machine Classifier

classifier.fit(X_train, Y_train)



"""Model *Evalutation*

SCORERS,
Accuracy SCORERS
"""

# Accuracy score on training data
X_train_prediction=classifier.predict(X_train)
training_data_accuracy=accuracy_score(X_train_prediction, Y_train)

print("Accuracy score of the training data: ", training_data_accuracy)

# Accuracy score on training data
X_test_prediction=classifier.predict(X_test)
test_data_accuracy=accuracy_score(X_test_prediction, Y_test)

X_test_prediction = classifier.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)

print("Accuracy score of the test dataset ", test_data_accuracy)



"""Making a Predictive system"""

input_data=(4,111,72,47,207,37.1,1.39,56) # here input data from databese for checking



"""Changing The Input data in Numpy array"""

input_data_as_numpy=np.asarray(input_data)

# Re-shape the array as we are predicting for one instance

input_data_reshape=input_data_as_numpy.reshape(1,-1)

# standarized the input data

std_data=scaler.transform(input_data_reshape)
print(std_data)

prediction=classifier.predict(std_data)
print(prediction)

print(prediction)

if (prediction==0):
  print("the person is not diabetic")
else:
  print("the person is a Diabetic")

pd.read_csv?

import pandas as pd
from matplotlib import pyplot as plt
import seaborn as sns

